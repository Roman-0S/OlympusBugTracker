@using static OlympusBugTracker.Client.Models.Enums




@if (User is not null)
{

    <EditForm Model="User" OnValidSubmit="HandleSubmit">

        @foreach (Roles role in Enum.GetValues(typeof(Roles)))
        {
            if (User.Role == role.ToString())
            {
                <h5>@User.FullName - @role.GetDisplayName()</h5>
            }
        }

        <div class="hstack gap-3">

            <div class="input-group">

                <InputSelect @bind-Value="User.Role" class="form-control mx-2">

                    @foreach (Roles role in Enum.GetValues(typeof(Roles)))
                    {
                        <option value="@role">@role.GetDisplayName()</option>
                    }

                </InputSelect>

                <button class="btn btn-sm btn-primary">Save</button>

            </div>

        </div>


    </EditForm>

}






@code {

    #region parameters

    [Parameter, EditorRequired]
    public UserDTO? User { get; set; }

    [Parameter, EditorRequired]
    public EventCallback<UserDTO> OnSubmit { get; set; }

    #endregion


    #region state



    #endregion


    #region methods

    private async Task HandleSubmit()
    {
        await OnSubmit.InvokeAsync(User);
    }

    #endregion

}
