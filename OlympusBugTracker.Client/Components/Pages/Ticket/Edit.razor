@page "/ticket/edit/{id:int}"
@rendermode InteractiveAuto

@using OlympusBugTracker.Client.Components.UI.Ticket
@using OlympusBugTracker.Client.Helpers

@inject ITicketDTOService TicketService
@inject NavigationManager Nav


<PageTitle>Bug Tracker | Edit a Ticket</PageTitle>



<div>

    <TicketForm Ticket="ticket" OnSubmit="HandleSubmit" Projects="projects" />

</div>






@code {

    #region parameters

    [CascadingParameter]
    Task<AuthenticationState>? AuthStateTask { get; set; }

    [Parameter]
    public int Id { get; set; }

    #endregion


    #region state

    private UserInfo? userInfo;

    private TicketDTO? ticket;

    private IEnumerable<ProjectDTO>? projects;

    #endregion


    #region methods

    protected override async Task OnInitializedAsync()
    {
        try
        {
            userInfo = await UserInfoHelper.GetUserInfoAsync(AuthStateTask);

            if (userInfo is null)
            {
                Nav.NavigateTo("/tickets");
            }

            ticket = await TicketService.GetTicketByIdAsync(Id, userInfo!.CompanyId);
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex);
            throw;
        }
    }

    private async Task HandleSubmit(TicketDTO ticket)
    {
        try
        {
            await TicketService.UpdateTicketAsync(ticket, userInfo!.CompanyId, userInfo.UserId);

            Nav.NavigateTo("/tickets");
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex);
            throw;
        }
    }

    #endregion

}
