@page "/project/{id:int}"
@rendermode InteractiveServer

@using OlympusBugTracker.Client.Helpers
@using static OlympusBugTracker.Client.Models.Enums

@inject IProjectDTOService ProjectService
@inject ICompanyDTOService CompanyService
@inject NavigationManager Nav



@if (project is not null)
{

    <div class="row">

        <div class="col-md-8">

            <h1>@project.Name</h1>

            <p>@((MarkupString)project.Description!)</p>

            <p>@project.StartDate - @project.EndDate</p>

            <p>@project.Priority</p>

        </div>

        <div class="col-md-4">



        </div>

    </div>

}




@code {

    #region parameters

    [CascadingParameter]
    public Task<AuthenticationState>? AuthStateTask { get; set; }

    [Parameter]
    public int Id { get; set; }

    #endregion


    #region state

    private UserInfo? userInfo;

    private ProjectDTO? project;

    IEnumerable<UserDTO> projectManagers = [];

    #endregion


    #region methods

    protected override async Task OnInitializedAsync()
    {
        try
        {
            userInfo = await UserInfoHelper.GetUserInfoAsync(AuthStateTask);

            project = await ProjectService.GetProjectByIdAsync(Id, userInfo!.CompanyId);

            projectManagers = await CompanyService.GetUsersInRoleAsync(nameof(Roles.ProjectManager), userInfo!.CompanyId);
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex);
            throw;
        }

        if (project is null)
        {
            Nav.NavigateTo("/projects");
        }
    }

    #endregion

}
